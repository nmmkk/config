[[plugins]]
repo = 'Shougo/dein.vim'

### [[plugins]]
### repo = 'Shougo/unite.vim'
### hook_add = '''
###     let g:unite_source_grep_command="ag"
###     let g:unite_source_grep_default_opts="-i --nocolor --nogroup"
### '''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]] # Integrates GNU GLOBAL source code tag system with VIM.
repo = 'vim-scripts/gtags.vim'
hook_add = '''
    " for GNU GLOBAL (gtags)
    nnoremap [GnuGlobal] <nop>
    nmap <Space>g [GnuGlobal]
    
    """"        ,q     検索結果Windowを閉じる
    "        [GnuGlobal]g     ソースコードの grep
    "        [GnuGlobal]l     このファイルの関数一覧
    "        [GnuGlobal]j     カーソル以下の定義元を探す
    "        [GnuGlobal]k     カーソル以下の使用箇所を探す
    "        [GnuGlobal]n     次の検索結果へジャンプする
    "        [GnuGlobal]p     前の検索結果へジャンプする
    " nnoremap <silent> [GnuGlobal]q     <C-w><C-w><C-w>q
    
    " Launch grep mode
    nnoremap <silent> [GnuGlobal]g     :Gtags -g
    
    " Display list of fucntions in the file.
    nnoremap <silent> [GnuGlobal]l     :Gtags -f %<CR>
    
    " Jump to where the target is defined.
    """ nnoremap <silent> [GnuGlobal]j     :Gtags <C-r><C-w><CR>
    nnoremap <silent> [GnuGlobal]j     :GtagsCursor<CR>
    
    " Jump to where the target is used.
    nnoremap <silent> [GnuGlobal]k     :Gtags -r <C-r><C-w><CR>
    
    " Jump to the next item in quickfix.
    """ nnoremap <silent> [GnuGlobal]n     :cn<CR>
    """ nnoremap <C-j>  :cn<CR>  " ==> I should use ']q' from unimpaired.
    
    " Jump to the previous item in quickfix.
    """ nnoremap <silent> [GnuGlobal]p     :cp<CR>
    """ nnoremap <C-k>  :cp<CR>  " ==> I should use '[q' from unimpaired.
'''

[[plugins]] # Integrated reference viewer.
repo = 'thinca/vim-ref'

[[plugins]] # Realtime preview by Vim. (Markdown, reStructuredText, textile)
repo = 'kannokanno/previm'

[[plugins]] # Open URI with your favorite browser from your most favorite editor
repo = 'tyru/open-browser.vim'

[[plugins]] # A light and configurable statusline/tabline for Vim
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
    \   'colorscheme': 'wombat'
    \}
'''

[[plugins]] # Highlights trailing whitespace in red and provides :FixWhitespace to fix it.
repo = 'bronson/vim-trailing-whitespace'

[[plugins]] # Zeal for Vim
repo = 'KabbAmine/zeavim.vim'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]] # A vim plugin to display the indention levels with thin vertical lines
repo = 'Yggdroot/indentLine'

[[plugins]] # surround.vim: quoting/parenthesizing made simple
repo = 'tpope/vim-surround'

[[plugins]] # unimpaired.vim: pairs of handy bracket mappings
repo = 'tpope/vim-unimpaired'

[[plugins]] # repeat.vim: enable repeating supported plugin maps with .
repo = 'tpope/vim-repeat'

[[plugins]] # easy to use, file-type sensible comments for Vim. It can handle embedded syntax.
repo = 'tomtom/tcomment_vim'

[[plugins]] # easy to use, file-type sensible comments for Vim. It can handle embedded syntax.
repo = 'tomtom/tcomment_vim'

[[plugins]] # incsearch.vim incrementally highlights ALL pattern matches unlike default 'incsearch'
repo = 'haya14busa/incsearch.vim'
hook_add = '''
    " Replace default search commands
    map /  <Plug>(incsearch-forward)
    map ?  <Plug>(incsearch-backward)

    " One that does not move the cursor
    map g/ <Plug>(incsearch-stay)

    " Turn on hlsearch only during searching
    " :h g:incsearch#auto_nohlsearch
    let g:incsearch#auto_nohlsearch = 1
    map n  <Plug>(incsearch-nohl-n)
    map N  <Plug>(incsearch-nohl-N)
    map *  <Plug>(incsearch-nohl-*)
    map #  <Plug>(incsearch-nohl-#)
    map g* <Plug>(incsearch-nohl-g*)
    map g# <Plug>(incsearch-nohl-g#)
'''

[[plugins]] # CVS/SVN/SVK/git/hg/bzr integration plugin
repo = 'vim-scripts/vcscommand.vim'

[[plugins]] # Run commands quickly.
repo = 'thinca/vim-quickrun'
depends = ['vimproc']
hook_add = '''
    let g:quickrun_config = {
    \   '_': {
    \       'runner': 'vimproc',
    \       'runner/vimproc/updatetime': 500,
    \       'hook/time/enable': '1',
    \       'outputter' : 'error',
    \       'outputter/error/success' : 'buffer',
    \       'outputter/error/error'   : 'quickfix',
    \       'outputter/buffer/split'  : ':rightbelow 8sp',
    \       'outputter/buffer/close_on_empty' : 1,
    \   },
    \   'c/make/fs': {
    \       'command': 'make',
    \       'exec': '%c -f wrap.mk',
    \       'cmdopt': '-std=c11'
    \   },
    \}
'''

#==================================================
# Colors
#==================================================
[[plugins]] # hybrid
repo = 'w0ng/vim-hybrid'

[[plugins]] # solarized
repo = 'altercation/vim-colors-solarized'

[[plugins]] # dracula
repo = 'dracula/vim'

[[plugins]] # molokai
repo = 'tomasr/molokai'

