# tmux configuration file
#
# Ref: http://qiita.com/succi0303/items/cb396704493476373edf

# prefixキーをC-tに変更する
set -g prefix C-t

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded '~/.tmux.conf'!"

# C-t*2でtmux内のプログラムにC-tを送る
bind C-t send-prefix

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# マウス操作を有効にする
### # For tmux 2.0
### set -g mode-mouse on
### set -g mouse-select-pane on
set -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# 256色端末を使用する
### screen-256color caused strange color setting
###  Ref: https://github.com/zsh-users/zsh-history-substring-search/issues/40
########    set -g default-terminal "screen-256color"

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# ウィンドウリストの色を設定する
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# アクティブなウィンドウを目立たせる
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# ペインボーダーの色を設定する
set -g pane-border-fg green
set -g pane-border-bg black
# アクティブなペインを目立たせる
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# コマンドラインの色を設定する
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
## 右パネルを設定する
set -g status-right "#[fg=cyan][%Y-%m-%d(%a) %H:%M]"
# The following option (status-ufs8) is no longer necessary since version 2.2 .
# Ref: https://github.com/tmux/tmux/issues/230
##### ## ステータスバーのUTF-8サポートを有効にする
##### set -g status-utf8 on
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
## ステータスバーを上部に表示する
set -g status-position top

# コピーモードを設定する
## viのキーバインドを使用する
setw -g mode-keys vi
# ## クリップボード共有を有効にする  ==> Doesn't work for me. New tmux session failed to launch.
# set-option -g default-command "reattach-to-user-namespace -l zsh"
## コピーモードの操作をvi風に設定する
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# C-t > : Send buffer contents to clipboard
bind-key > save-buffer ~/.tmux-buffer \; run-shell 'xsel -b -i < ~/.tmux-buffer' \; display-message "Copied to clipboard."
# C-t < : Obtain contents of clipboard and paste it.
bind-key < if-shell 'xsel -b -o > ~/.tmux-buffer' 'load-buffer ~/.tmux-buffer ; paste-buffer'

# c0-* options have been deleted since version 2.1 .
# Ref: http://stackoverflow.com/questions/26723719/tmux-unknown-option-c0-change-interval#33423156
##### # Work better with lots of text output
##### setw -g c0-change-interval 10
##### setw -g c0-change-trigger 250

# I am too lazy to release Ctrl key
bind C-n next-window
bind C-p previous-window
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

# Obsolete settings {{{1

# Logging
# # Log ログを時刻付きで記録する
# # http://blog.urban-theory.net/2014/07/01/how_toget_tmux_pane_log_with_timestamp
# bind-key H pipe-pane -o 'bash -c "while read -r LINE; do echo \"[\$(date +\"%%Y-%%m-%%dT%%H:%%M:%%S\")] \${LINE}\" >> \${HOME}/log/tmux/\$(date +%Y%m%d-%H%M)-#S-#D.log; done "' \; display-message "Logging start."
# bind-key h pipe-pane \; display-message "Logging end."
#

### # ===== logging =====
### # http://qiita.com/docokano/items/8418cc1b2561df03e8d9
### #
### # C-t C-H Start logging.
### bind-key C-H pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/log/tmux/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
### # C-t C-h Stop logging
### bind-key C-h pipe-pane \; display-message "Logging end."
### # C-t v Open new window. Logging always. (-n is set window name.)
### bind-key v new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/log/tmux/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'

# #===================================
# # Enable copy-and-paste using xsel
# #===================================
#
# # C-t > : Send buffer contents to clipboard
# bind-key > save-buffer ~/.tmux-buffer \; run-shell 'xsel -b -i < ~/.tmux-buffer' \; display-message "Copied to clipboard."
# # C-t < : Obtain contents of clipboard and paste it.
# bind-key < if-shell 'xsel -b -o > ~/.tmux-buffer' 'load-buffer ~/.tmux-buffer ; paste-buffer'

# #===================================
# # Log
# #===================================
#
# # PREFIX C-p Start logging.
# bind-key C-p pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
# # PREFIX C-o Stop logging
# bind-key C-o pipe-pane \; display-message "Logging end."
# # PREFIX v Open new window. Logging always. (-n is set window name.)
# bind-key v new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'

# }}}1

# vim: foldmethod=marker
